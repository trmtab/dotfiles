#
# Enable Powerlevel10k instant prompt.
# Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
#
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

#
# Color
#
export CLICOLOR=1

#
# zsh options
#
# https://zsh.sourceforge.io/Doc/Release/Options.html#Options

setopt NO_CASE_GLOB
setopt RM_STAR_SILENT
setopt EXTENDED_GLOB

setopt HIST_IGNORE_DUPS HIST_IGNORE_SPACE
HISTFILE=~/.zhistory
HISTSIZE=8192
SAVEHIST=8192

# vim keymap
bindkey -v
bindkey "^A" beginning-of-line
bindkey "^E" end-of-line
bindkey "^K" kill-line
bindkey "^P" history-search-backward
bindkey "^Q" push-line-or-edit
bindkey "^R" history-incremental-search-backward
bindkey "^Y" accept-and-hold

export EDITOR=vim

#
# brew
#
# Set HOMEBREW_PREFIX, etc.
eval "$(/opt/homebrew/bin/brew shellenv)"

# Opt out of Homebrewâ€™s analytics
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_AUTO_UPDATE=1

# Activate p10k
source $HOMEBREW_PREFIX/opt/powerlevel10k/powerlevel10k.zsh-theme
[[ ! -f $HOME/.p10k.zsh ]] || source $HOME/.p10k.zsh

export BROWSER='/Applications/Google Chrome.app/Contents/MacOS/Google Chrome'

#
# arkade
#
export PATH=$PATH:$HOME/.arkade/bin/

#
# pyenv
#
if which pyenv > /dev/null; then
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)";
fi

#
# go
#
export GOPATH=$HOME/go
export GOROOT="$HOMEBREW_PREFIX/opt/go/libexec"
export PATH="${PATH:+${PATH}:}:${GOPATH}/bin:${GOROOT}/bin"

#
# ruby
#
export PATH="$HOMEBREW_PREFIX/opt/ruby/bin:$PATH"

export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"

#
# fzf
#
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Set $PATH to array-unique-special
typeset -aU path

#
# Functions / Aliases
#

dotenv() {
  if [ -f .env ]; then
    export $(sed '/^ *#/ d' .env)
  else
    echo 'No .env file found' 1>&2
    return 1
  fi
}

g() {
  if [[ $# -gt 0 ]]; then
    git "$@"
  else
    git status
  fi
}

alias -g py-clean='find . | grep -E "(/__pycache__$|\.pyc$|\.pyo$)" | xargs rm -rf'
alias -g py-versions='pyenv install --list | grep -E "^\s*[2-5]\.[0-9]+\.[0-9]+" | sed "s/ //g" | sort -Vr'
alias -g py-installed='pyenv versions | grep -oE "[0-9]+\.[0-9]+\.[0-9]+"'

prune-git-branch() {
  local tmpfile=$(mktemp)
  git branch --merged \
    | grep -Ev "(master|main)" >$tmpfile \
    && vim $tmpfile \
    && xargs git branch -d <$tmpfile \
    && rm $tmpfile
}

[ -f ~/.zshaliases ] && source ~/.zshaliases

# Added by Amplify CLI binary installer
export PATH="$HOME/.amplify/bin:$PATH"
{{/* vim: set filetype=zsh ts=2 sts=2 sw=2: */}}
